---
# roles/data-download/tasks/blast.yml

- name: Data download | Make data directory
  shell: mkdir -p {{item}} creates={{item}}
  with_items:
    - '{{ vendor_data }}/blast'

- name: Data download | Get bucket manifest
  get_url:
    dest: "/tmp/blast-bucket.xml"
    url: https://s3.amazonaws.com/capsid.data.swatt/

# Downloading the Blast database, which is likely split into multiple files
# We want both the original files and digests, just in case.

- name: Data download | Build bucket list
  shell: xmlstarlet sel -N m="http://s3.amazonaws.com/doc/2006-03-01/" -t -m '//m:Key' -v . -n /tmp/blast-bucket.xml | grep blast/ > /tmp/blast-bucket-list.txt creates=/tmp/blast-bucket-list.txt

- name: Data download | Get files from S3
  shell: cat /tmp/blast-bucket-list.txt | parallel -j4 --no-notice "if [ ! -e {{ vendor_data }}/{} ]; then wget -nv -O {{ vendor_data }}/{} https://s3.amazonaws.com/capsid.data.swatt/{}; fi;"

- name: Data download | Unpack nr* files from S3
  shell: grep -e "nr.*gz$" /tmp/blast-bucket-list.txt | sed -n -e 's/.tar.gz//p' | parallel -j4 --no-notice "if [ ! -e {{ vendor_data }}/{}.phi ]; then tar -x --overwrite -f {{ vendor_data }}/{}.tar.gz -z --directory {{ vendor_data }}/blast; fi;"

- name: Data download | Unpack nt* files from S3
  shell: grep -e "nt.*gz$" /tmp/blast-bucket-list.txt | sed -n -e 's/.tar.gz//p' | parallel -j4 --no-notice "if [ ! -e {{ vendor_data }}/{}.nni ]; then tar -x --overwrite -f {{ vendor_data }}/{}.tar.gz -z --directory {{ vendor_data }}/blast; fi;"
